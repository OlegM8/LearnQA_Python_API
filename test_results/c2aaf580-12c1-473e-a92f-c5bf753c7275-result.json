{"name": "test_create_user_with_invalid_email_format", "status": "failed", "statusDetails": {"message": "AssertionError: Email format is valid\nassert 'Invalid email format' == \"Invalid emai...vexample.com'\"\n  - Invalid email format: 'vinkotovexample.com'\n  + Invalid email format", "trace": "self = <tests.test_user_register.TestUserRegister object at 0x1030fe2b0>\n\n    def test_create_user_with_invalid_email_format(self):\n        email = \"vinkotovexample.com\"\n        data = {\n            'password': '123',\n            'username': 'learnqa',\n            'firstName': 'learnqa',\n            'lastName': 'learnqa',\n            'email': email\n        }\n        response = requests.post(\"https://playground.learnqa.ru/api/user/\", data=data)\n    \n        Assertions.assert_status_code(response, 400)\n>       assert response.content.decode(\"utf-8\") == f\"Invalid email format: '{email}'\", \\\n            f\"Email format is valid\"\nE       AssertionError: Email format is valid\nE       assert 'Invalid email format' == \"Invalid emai...vexample.com'\"\nE         - Invalid email format: 'vinkotovexample.com'\nE         + Invalid email format\n\ntests/test_user_register.py:71: AssertionError"}, "start": 1635453847344, "stop": 1635453848018, "uuid": "aca89ff7-4e51-4d74-888a-7e2ccffa9550", "historyId": "47253924781a24f7e2de04c6769db20d", "testCaseId": "8fa1ceae48cdbca889aaa9b71c25f96c", "fullName": "tests.test_user_register.TestUserRegister#test_create_user_with_invalid_email_format", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_user_register"}, {"name": "subSuite", "value": "TestUserRegister"}, {"name": "host", "value": "MacBook-Pro.local"}, {"name": "thread", "value": "63870-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_user_register"}]}